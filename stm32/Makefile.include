##
## Copyright (C) 2009 Uwe Hermann <uwe@hermann-uwe.de>
## Copyright (C) 2010 Piotr Esden-Tempski <piotr@esden.net>
## Copyright (C) 2011 Fergus Noble <fergusnoble@gmail.com>
##
## Derived from libopenstm32 example Makefile.include
##
## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program.  If not, see <http://www.gnu.org/licenses/>.
##

SWIFTNAV_ROOT ?= ..
PREFIX ?= arm-none-eabi
GIT_VERSION := $(shell $(SWIFTNAV_ROOT)/scripts/git-check.sh)
# PREFIX ?= arm-elf
CC = $(PREFIX)-gcc
LD = $(PREFIX)-gcc
OBJCOPY = $(PREFIX)-objcopy
OBJDUMP = $(PREFIX)-objdump
# Uncomment this line if you want to use the installed (not local) library.
#TOOLCHAIN_DIR := $(shell dirname `which $(CC)`)/../$(PREFIX)
TOOLCHAIN_DIR = $(SWIFTNAV_ROOT)/../libopencm3
CFLAGS += -O3 -g -Wall -Wextra -Werror -I$(TOOLCHAIN_DIR)/include -I$(SWIFTNAV_ROOT)\
       -fno-common -mcpu=cortex-m3 -mthumb -msoft-float -MD -DSTM32F2 \
       -DGIT_VERSION="\"$(GIT_VERSION)\"" -std=gnu99
LDSCRIPT = $(SWIFTNAV_ROOT)/stm32/swiftnav.ld
LDFLAGS += -lc -lnosys -L$(TOOLCHAIN_DIR)/lib -L$(SWIFTNAV_ROOT)/libswiftnav \
        -L$(TOOLCHAIN_DIR)/lib/stm32/f2 \
        -T$(LDSCRIPT) -nostartfiles -Wl,--gc-sections \
        -mthumb -march=armv7 -mfix-cortex-m3-ldrd -msoft-float -lm

OOCD ?= openocd
OOCD_INTERFACE ?= flossjtag
OOCD_CONFIG ?= $(SWIFTNAV_ROOT)/stm32/swiftnav.cfg

# Be silent per default, but 'make V=1' will show all compiler calls.
ifneq ($(V),1)
Q := @
NULL := 2>/dev/null
else
LDFLAGS += -Wl,--print-gc-sections
endif

.SUFFIXES: .elf .bin .hex .srec .list .images
.SECONDEXPANSION:
.SECONDARY:

all: images

images: $(BINARY).images
flash: $(BINARY).flash

%.images: %.bin %.hex %.srec %.list
	@echo "*** $* images generated ***"

%.bin: %.elf
	@printf "  OBJCOPY $(*).bin\n"
	$(Q)$(OBJCOPY) -Obinary $(*).elf $(*).bin

%.hex: %.elf
	@printf "  OBJCOPY $(*).hex\n"
	$(Q)$(OBJCOPY) -Oihex $(*).elf $(*).hex

%.srec: %.elf
	@printf "  OBJCOPY $(*).srec\n"
	$(Q)$(OBJCOPY) -Osrec $(*).elf $(*).srec

%.list: %.elf
	@printf "  OBJDUMP $(*).list\n"
	$(Q)$(OBJDUMP) -S $(*).elf > $(*).list

%.elf: $(OBJS)
	@printf "  LD      $(subst $(shell pwd)/,,$(@))\n"
	$(Q)$(LD) -o $(*).elf $(OBJS) -lopencm3_stm32f2 -lswiftnav -Xlinker -Map=$(*).map $(LDFLAGS)

%.o: %.c Makefile
	@printf "  CC      $(subst $(shell pwd)/,,$(@))\n"
	$(Q)$(CC) $(CFLAGS) -o $@ -c $<

clean:
	$(Q)rm -f $(OBJS)
	$(Q)rm -f $(OBJS:.o=.d)
	$(Q)rm -f *.elf
	$(Q)rm -f *.bin
	$(Q)rm -f *.hex
	$(Q)rm -f *.srec
	$(Q)rm -f *.list
	$(Q)rm -f *.map

%.flash: %.hex
	@printf "  FLASH   $<\n"
	@# IMPORTANT: Don't use "resume", only "reset" will work correctly!
	$(Q)$(OOCD) -f interface/$(OOCD_INTERFACE).cfg \
		    -f $(OOCD_CONFIG) \
		    -c "init" -c "reset halt" \
		    -c "flash write_image erase unlock $(*).hex" \
				-c "verify_image $(*).hex" \
		    -c "reset" \
		    -c "shutdown" $(NULL)

reset:
	@echo "  RESET "
	$(Q)$(OOCD) -f interface/$(OOCD_INTERFACE).cfg \
		    -f $(OOCD_CONFIG) \
		    -c "init" \
		    -c "reset" \
		    -c "shutdown" $(NULL)

ftdi_kextunload:
	sudo kextunload /System/Library/Extensions/FTDIUSBSerialDriver.kext
ftdi_kextload:
	sudo kextload /System/Library/Extensions/FTDIUSBSerialDriver.kext

.PHONY: images clean ftdi_kextload ftdi_kextunload

-include $(OBJS:.o=.d)

